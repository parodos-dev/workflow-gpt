apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: complex-assessment-workflow-bootstrap
  title: Complex assessment workflow bootstrap project
  description: Bootstrap project for complex assessment serverless workflow using custom java code
  tags:
    - orchestrator
    - built-in
  links:
    - url: https://openshift-knative.github.io/docs/docs/latest/serverless-logic/about.html
      title: About OpenShift Serverless Logic
      icon: techdocs
    - url: https://kiegroup.github.io/kogito-docs/serverlessworkflow/latest/index.html
      title: SonataFlow Guides
      icon: techdocs
    - url: https://www.rhdhorchestrator.io/1.2/docs/core-concepts/workflow-types/
      title: Workflow Types
      icon: techdocs
spec:
  owner: janus-orchestrator
  type: complex-assessment-workflow-bootstrap
  parameters:
    - title: Provide information about the workflow software project
      description: Configure the github repository where the Maven software project is located
      required:
        - orgName
        - repoName
        - workflowId
        - infrastructureWorkflowId
        - owner
        - system
      properties:
        orgName:
          title: Organization Name
          type: string
          ui:autofocus: true
          description: Github organization Name
        repoName:
          title: Repository Name
          type: string
          description: Github repository name
        description:
          title: Description
          type: string
          description: Description added to the README file
        workflowId:
          title: Workflow ID
          type: string
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)([.]?[a-zA-Z0-9]+)*$" # hypens '-' are not allowed to not mess with java package
          description: Unique identifier of the workflow in SonataFlow
        infrastructureWorkflowId:
          title: Infrastructure Workflow ID
          type: string
          pattern: "^([a-zA-Z][a-zA-Z0-9]*)([.][a-zA-Z0-9]+)*$" # hypens '-' are not allowed to not mess with java package
          description: Workflow ID, the unique identifier of the infrastructure worklow available in the environment
        owner:
          title: Owner
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - Group
                - User
          default: user:guest
        system:
          title: System
          type: string
          ui:field: EntityPicker
          ui:options:
            catalogFilter:
              kind:
                - System
    - title: Provide information about the Build environment
      required:
        - CI
      properties:
        CI:
          title: Select a CI/CD method
          type: string
          description: This action will create a CI pipeline for your application based on chosen method
          default: tekton_argocd
          enum:
            - none
            - tekton_argocd
          enumNames:
            - None
            - Tekton with ArgoCD
      # See: https://github.com/redhat-developer/red-hat-developer-hub-software-templates/blob/3019e781b988e0548eb987eed3e522854ed8c52f/templates/github/quarkus-backend/template.yaml#L101
      dependencies:
        CI:
          oneOf:
            - properties:
                CI:
                  const: none
            - properties:
                CI:
                  const: tekton_argocd
                namespace:
                  title: Workflow Namespace
                  type: string
                  default: sonataflow-infra
                  description: Deployment namespace for workflow applications
                argocdNamespace:
                  title: GitOps Namespace
                  type: string
                  default: orchestrator-gitops
                  description: Deployment namespace for ArgoCD and Tekton resources
                quayOrgName:
                  title: Quay Organization Name
                  type: string
                  description: The Quay Organization Name of the published workflow
                quayRepoName:
                  title: Quay Repository Name
                  type: string
                  description: The Quay Repository Name of the published workflow. The repository must exist before deploying the gitops.
                persistencePSQLSecretName:
                  title: PostgreSQL Secret Name
                  type: string
                  default: sonataflow-psql-postgresql
                  description: Name of the secret in which the PostgreSQL secrets are stored. Shall be in the same namespace as the workflow.
                persistencePSQLUserKey:
                  title: PostgreSQL User key from secret
                  type: string
                  description: The key name in which the PostgreSQL user is stored.
                  default: postgres-username
                persistencePSQLPasswordKey:
                  title: PostgreSQL Password key from secret
                  type: string
                  description: The key name in which the PostgreSQL password is stored.
                  default: postgres-password
                persistencePSQLServiceName:
                  title: PostgreSQL K8s Service Name
                  type: string
                  default: sonataflow-psql-postgresql
                  description: Name of the service running the PostgreSQL instance.
                persistencePSQLServiceNamespace:
                  title: PostgreSQL K8s Service Namespace
                  type: string
                  default: sonataflow-infra
                  description: Namespace of the service running the PostgreSQL instance.
                persistencePSQLServicePort:
                  title: PostgreSQL Port
                  type: integer
                  default: 5432
                  description: Port on which the PostgreSQL instance is running.
                persistencePSQLDatabaseName:
                  title: PostgreSQL Database Name
                  type: string
                  description: Name of the database to use for persistence.
                  default: sonataflow
              required:
                - namespace
                - argocdNamespace
                - quayOrgName
                - quayRepoName
                - persistencePSQLSecretName
                - persistencePSQLUserKey
                - persistencePSQLPasswordKey
                - persistencePSQLServiceName
                - persistencePSQLServiceNamespace
                - persistencePSQLServicePort
                - persistencePSQLDatabaseName
  steps:
    - id: workflowCodeTemplate
      name: Generating the Workflow Source Code and Catalog Info Component
      action: fetch:template
      input:
        # "Relative path is not allowed to refer to a directory outside its parent"
        url: ./skeleton
        values:
          namespace: ${{ parameters.namespace }}
          argocdNamespace: ${{ parameters.argocdNamespace }}
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          description: ${{ parameters.description }}
          groupId: io.janus.workflow
          artifactId: ${{ parameters.workflowId }}
          version: 1.0.0-SNAPSHOT
          workflowId: ${{ parameters.workflowId }}
          infrastructureWorkflowId: ${{ parameters.infrastructureWorkflowId }}
          sourceControl: github.com
          applicationType: workflow-project
          lifecycle: development
          quayOrgName: ${{ parameters.quayOrgName }}
          quayRepoName: ${{ parameters.quayRepoName }}
        targetPath: workflow
    - id: renameFiles
      action: fs:rename
      name: Rename files
      input:
        files:
          - from: workflow/src/main/resources/schemas/input-schema.json
            to: workflow/src/main/resources/schemas/${{ parameters.workflowId }}-input-schema.json
            overwrite: true
          - from: workflow/src/main/resources/schemas/workflow-option-output-schema.json
            to: workflow/src/main/resources/schemas/${{ parameters.workflowId }}-workflow-option-output-schema.json
            overwrite: true
          - from: workflow/src/main/resources/schemas/workflow-options-output-schema.json
            to: workflow/src/main/resources/schemas/${{ parameters.workflowId }}-workflow-options-output-schema.json
            overwrite: true
          - from: workflow/src/main/resources/specs/dataindex.yaml
            to: workflow/src/main/resources/specs/${{ parameters.workflowId }}-dataindex.yaml
            overwrite: true
          - from: workflow/src/main/resources/template.sw.yaml
            to: workflow/src/main/resources/${{ parameters.workflowId }}.sw.yaml
            overwrite: true
    - id: buildCodeTemplate
      name: Generating the Build Code for the Workflow
      action: fetch:template
      if: ${{ parameters.CI == 'tekton_argocd' }}
      input:
        url: ../build
        copyWithoutTemplating:
          - .github/workflows/update_pipelinerun.yaml
        values:
          namespace: ${{ parameters.namespace }}
          argocdNamespace: ${{ parameters.argocdNamespace }}
          orgName: ${{ parameters.orgName }}
          workflowId: ${{ parameters.workflowId }}
          gitUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}.git
          gitOpsUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}-gitops.git
          quayOrgName: ${{ parameters.quayOrgName }}
          quayRepoName: ${{ parameters.quayRepoName }}
          convertToFlat: false
        targetPath: workflow
    - id: publishWorkflow
      name: Publishing to the Workflow Repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: ${{ parameters.description }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}
        defaultBranch: main
        sourcePath: workflow
    - id: register
      name: Registering the Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishWorkflow.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
    - id: gitopsCodeTemplate
      name: Generating the GitOps Component and Catalog Info Component
      action: fetch:template
      if: ${{ parameters.CI == 'tekton_argocd' }}
      input:
        url: ../gitops
        values:
          workflowId: ${{ parameters.workflowId }}
          namespace: ${{ parameters.namespace }}
          argocdNamespace: ${{ parameters.argocdNamespace }}
          orgName: ${{ parameters.orgName }}
          repoName: ${{ parameters.repoName }}-gitops
          owner: ${{ parameters.owner }}
          system: ${{ parameters.system }}
          applicationType: workflow-project
          description: ${{ parameters.description }}
          sourceControl: github.com
          lifecycle: development
          gitUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}.git
          gitOpsUrl: git@github.com:${{ parameters.orgName }}/${{ parameters.repoName }}-gitops.git
          persistencePSQLSecretName: ${{ parameters.persistencePSQLSecretName }}
          persistencePSQLUserKey: ${{ parameters.persistencePSQLUserKey }}
          persistencePSQLPasswordKey: ${{ parameters.persistencePSQLPasswordKey }}
          persistencePSQLServiceName: ${{ parameters.persistencePSQLServiceName }}
          persistencePSQLServiceNamespace: ${{ parameters.persistencePSQLServiceNamespace }}
          persistencePSQLServicePort: ${{ parameters.persistencePSQLServicePort }}
          persistencePSQLDatabaseName: ${{ parameters.persistencePSQLDatabaseName }}
          persistencePSQLDatabaseSchema: ${{ parameters.workflowId }}
          quayOrgName: ${{ parameters.quayOrgName }}
          quayRepoName: ${{ parameters.quayRepoName }}
        targetPath: gitops
    - id: renameFilesForPersistence
      if: ${{ parameters.CI == 'tekton_argocd' }}
      action: fs:rename
      name: Rename files for persistence
      input:
        files:
          - from: gitops/kustomize/base/sonataflow-patch-persistence.yaml
            to: gitops/kustomize/base/sonataflow-patch.yaml
            overwrite: true
    - id: publishGitOps
      if: ${{ parameters.CI == 'tekton_argocd' }}
      name: Publishing to the GitOps Code Repository
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: Configuration repository for ${{ parameters.orgName }}/${{ parameters.repoName }}
        repoUrl: github.com?owner=${{ parameters.orgName }}&repo=${{ parameters.repoName }}-gitops
        defaultBranch: main
        sourcePath: gitops
    - id: registerGitOps
      if: ${{ parameters.CI == 'tekton_argocd' }}
      name: Registering the GitOps Catalog Info Component
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publishGitOps.output.repoContentsUrl }}
        catalogInfoPath: /catalog-info.yaml
  output:
    links:
      - if: ${{ parameters.CI == 'tekton_argocd' }}
        title: Bootstrap the GitOps Resources
        url: https://github.com/${{ parameters.orgName }}/${{ parameters.repoName }}-gitops/tree/main/bootstrap
      - title: Open the Source Code Repository
        url: ${{ steps.publishWorkflow.output.remoteUrl }}
      - title: Open the Catalog Info Component
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
